name: Tox tests
on:
  workflow_call:
    inputs:
      continue-on-error:
        type: boolean
        required: false
        default: false
  workflow_dispatch:
    inputs:
      continue-on-error:
        description: Continue on error
        type: boolean
        required: false
        default: false

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    continue-on-error: ${{ inputs.continue-on-error }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
    steps:
      - name: Setup python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python -m pip install tox
          tox -e lint -vv --notest
      - name: Run linter
        run: tox -e lint -vv --skip-pkg-install
  tox:
    needs: [lint]  # Code coverage will run if linters fail (which runs unit tests) - no need to spin up agents for failed linters
    name: Unit test ${{ matrix.py }} - ${{ matrix.os }}
    continue-on-error: ${{ inputs.continue-on-error }}
    runs-on: ${{ matrix.os }}
    strategy:
      # fail-fast: false  # Maybe we should fail fast to give time back to mac runners
      matrix:
        os:
          - ubuntu-22.04
          - windows-2022
          - macos-13
        py:
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
    steps:
      - name: Setup python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - uses: actions/checkout@v4
      - name: Setup test suite
        run: tox r -e python -vv --notest
      - name: Run test suite
        run: tox r -e python -vv --skip-pkg-install
  code-coverage:
    name: Calculate code coverage
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run code coverage
        run: |
          python -m pip install tox
          tox -e coverage
          coverage=$(jq .totals.percent_covered coverage.json | cut -c1-4)
          echo "Code coverage: $coverage%" >> $GITHUB_STEP_SUMMARY
      - name: Upload code coverage
        uses: actions/upload-artifact@v4
        with:
          path: ./htmlcov
          name: code_coverage
